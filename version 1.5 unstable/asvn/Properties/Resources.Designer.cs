//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace asvn.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("asvn.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied. Please, check that you have rights for the specified file..
        /// </summary>
        internal static string AccessDenied {
            get {
                return ResourceManager.GetString("AccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write asvn -h for help..
        /// </summary>
        internal static string AshkForHelp {
            get {
                return ResourceManager.GetString("AshkForHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to asvn error:.
        /// </summary>
        internal static string AsvnError {
            get {
                return ResourceManager.GetString("AsvnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database objects / database files must be the first in the collection.
        /// </summary>
        internal static string DatabaseObjectMustBeFirst {
            get {
                return ResourceManager.GetString("DatabaseObjectMustBeFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error processing response file at line {0}: {1}.
        /// </summary>
        internal static string ErrorProcessingResponseFile {
            get {
                return ResourceManager.GetString("ErrorProcessingResponseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected a valid command.
        /// </summary>
        internal static string ExpectedValidCommand {
            get {
                return ResourceManager.GetString("ExpectedValidCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to for this object type.
        /// </summary>
        internal static string ForThisObjectType {
            get {
                return ResourceManager.GetString("ForThisObjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file name &apos;{0}&apos; because do not exists or do not have access rights.
        /// </summary>
        internal static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number of options for command.
        /// </summary>
        internal static string InvalidNumberOfOptions {
            get {
                return ResourceManager.GetString("InvalidNumberOfOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid accessObject name. Must be in &apos;xxx.name&apos; format. Where xxx is a valid object type..
        /// </summary>
        internal static string InvalidObjectName {
            get {
                return ResourceManager.GetString("InvalidObjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option &apos;{0}&apos;.
        /// </summary>
        internal static string InvalidOption {
            get {
                return ResourceManager.GetString("InvalidOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid path for database or file do not exists.
        /// </summary>
        internal static string InvalidPathForDatabase {
            get {
                return ResourceManager.GetString("InvalidPathForDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root path for output files do not exists.
        /// </summary>
        internal static string OutputPathDoNotExist {
            get {
                return ResourceManager.GetString("OutputPathDoNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage:
        ///  asvn help|-h|-?
        ///  asvn i [-options] databaseFile [file1 file2 ...|@responseFile]
        ///  asvn e databaseFile exportFolder [objectname1 objectname2 ...|@resposeFile]
        ///  
        ///Commands:
        ///  h -h -?            Show this message and exit.
        ///  i import           Import file(s) to the database.
        ///  e export           Export from the database to file(s).
        ///                     
        ///Options:		     
        ///  -allowdatalost     For table objects. If the target table has data, asvn 
        ///                     raises an exception if t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
    }
}
